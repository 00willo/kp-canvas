#!/usr/bin/perl

use strict;

use lib './lib';
use feature ':5.10';

use Data::Dumper;

use Canvas::Store::WPPost;
use Canvas::Store::WPUser;
use Canvas::Store::Post;
use Canvas::Store::User;

sub migrate_wp_user {
  my $u = shift;

  return unless defined $u;

  my $wp = Canvas::Store::WPUser->search({ user_login => $u->username })->first;

  return unless defined $wp;

  say 'Found WP user ' . $u->username . '! Migrating ...';

  $u->password( $wp->user_pass );
  $u->email( $wp->user_email );
  $u->update;
}

my $create = $ARGV[0] eq "create";

# create firnsy
if( $create ) {
  my $csmart = Canvas::Store::User->find_or_create({
    username => 'csmart',
    status   => 'active',
    access   => 255,
  });

  my $firnsy = Canvas::Store::User->find_or_create({
    username => 'firnsy',
    status   => 'active',
    access   => 255,
    email    => '1',
  });

  migrate_wp_user( $firnsy );
  migrate_wp_user( $csmart );
};


#
# CONVERT NEWS POSTS
#

my( @posts ) = Canvas::Store::WPPost->search({ post_type => 'post' });

foreach my $post ( @posts ) {
  my $p = Canvas::Store::Post->create({
    name        => $post->post_name,
    content     => $post->post_content,
    excerpt     => $post->post_excerpt,
    status      => $post->post_status,
    title       => $post->post_title,
    created     => $post->post_date_gmt,
    updated     => $post->post_modified_gmt,
    author_id   => $post->post_author->ID,
    type        => 'news',
  });
}
